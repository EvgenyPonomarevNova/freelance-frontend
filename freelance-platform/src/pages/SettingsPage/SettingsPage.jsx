// pages/SettingsPage/SettingsPage.jsx
import './SettingsPage.scss'
import { useState, useEffect } from 'react'
import { useUser } from '../../contexts/UserContext'

function SettingsPage() {
  const { user, updateUser } = useUser()
  const [activeTab, setActiveTab] = useState('profile')
  const [saving, setSaving] = useState(false)

  const [profileData, setProfileData] = useState({
    name: '',
    email: '',
    phone: '',
    bio: '',
    category: '',
    skills: [],
    hourlyRate: '',
    location: '',
    website: ''
  })

  const [securityData, setSecurityData] = useState({
    currentPassword: '',
    newPassword: '',
    confirmPassword: ''
  })

  const [notificationSettings, setNotificationSettings] = useState({
    emailNotifications: true,
    projectNotifications: true,
    messageNotifications: true,
    marketingEmails: false,
    smsNotifications: false
  })

  const [paymentSettings, setPaymentSettings] = useState({
    paymentMethod: '',
    cardNumber: '',
    expiryDate: '',
    cvv: ''
  })

  useEffect(() => {
    if (user) {
      setProfileData({
        name: user.profile?.name || '',
        email: user.email || '',
        phone: user.profile?.phone || '',
        bio: user.profile?.bio || '',
        category: user.profile?.category || '',
        skills: user.profile?.skills || [],
        hourlyRate: user.profile?.hourlyRate || '',
        location: user.profile?.location || '',
        website: user.profile?.website || ''
      })
    }
  }, [user])

  const tabs = [
    { id: 'profile', name: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§' },
    { id: 'security', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üîê' },
    { id: 'notifications', name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'üîî' },
    { id: 'payments', name: '–ü–ª–∞—Ç–µ–∂–∏', icon: 'üí≥' },
    { id: 'privacy', name: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', icon: 'üõ°Ô∏è' }
  ]

  const categories = [
    { value: 'development', label: 'üíª –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' },
    { value: 'design', label: 'üé® –î–∏–∑–∞–π–Ω' },
    { value: 'marketing', label: 'üìä –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' },
    { value: 'writing', label: 'üìù –¢–µ–∫—Å—Ç—ã' },
    { value: 'seo', label: 'üîç SEO' },
    { value: 'other', label: 'üîß –î—Ä—É–≥–æ–µ' }
  ]

  const handleProfileSave = async (e) => {
    e.preventDefault()
    setSaving(true)
    
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const updatedUser = {
        ...user,
        email: profileData.email,
        profile: {
          ...user.profile,
          ...profileData
        }
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤ localStorage
      const users = JSON.parse(localStorage.getItem('nexus_users') || '[]')
      const userIndex = users.findIndex(u => u.id === user.id)
      if (userIndex !== -1) {
        users[userIndex] = updatedUser
        localStorage.setItem('nexus_users', JSON.stringify(users))
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      updateUser(updatedUser)
      
      alert('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è')
    } finally {
      setSaving(false)
    }
  }

  const handleSecuritySave = async (e) => {
    e.preventDefault()
    setSaving(true)
    
    try {
      if (securityData.newPassword !== securityData.confirmPassword) {
        alert('–ù–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç')
        return
      }
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å
      alert('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!')
      setSecurityData({
        currentPassword: '',
        newPassword: '',
        confirmPassword: ''
      })
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è')
    } finally {
      setSaving(false)
    }
  }

  const handleNotificationSave = async (e) => {
    e.preventDefault()
    setSaving(true)
    
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const userSettings = JSON.parse(localStorage.getItem('user_settings') || '{}')
      userSettings[user.id] = { notifications: notificationSettings }
      localStorage.setItem('user_settings', JSON.stringify(userSettings))
      
      alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫')
    } finally {
      setSaving(false)
    }
  }

  const renderProfileTab = () => (
    <div className="settings-tab">
      <div className="tab-header">
        <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h2>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</p>
      </div>

      <form onSubmit={handleProfileSave}>
        <div className="form-section">
          <h3>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          <div className="form-row">
            <div className="form-group">
              <label>–ü–æ–ª–Ω–æ–µ –∏–º—è *</label>
              <input
                type="text"
                value={profileData.name}
                onChange={(e) => setProfileData({...profileData, name: e.target.value})}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                required
              />
            </div>
            <div className="form-group">
              <label>Email *</label>
              <input
                type="email"
                value={profileData.email}
                onChange={(e) => setProfileData({...profileData, email: e.target.value})}
                placeholder="your@email.com"
                required
              />
            </div>
          </div>

          <div className="form-row">
            <div className="form-group">
              <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
              <input
                type="tel"
                value={profileData.phone}
                onChange={(e) => setProfileData({...profileData, phone: e.target.value})}
                placeholder="+7 (999) 999-99-99"
              />
            </div>
            <div className="form-group">
              <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
              <input
                type="text"
                value={profileData.location}
                onChange={(e) => setProfileData({...profileData, location: e.target.value})}
                placeholder="–ì–æ—Ä–æ–¥, —Å—Ç—Ä–∞–Ω–∞"
              />
            </div>
          </div>
        </div>

        <div className="form-section">
          <h3>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          <div className="form-group">
            <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <select
              value={profileData.category}
              onChange={(e) => setProfileData({...profileData, category: e.target.value})}
            >
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
              {categories.map(cat => (
                <option key={cat.value} value={cat.value}>{cat.label}</option>
              ))}
            </select>
          </div>

          <div className="form-group">
            <label>–û —Å–µ–±–µ</label>
            <textarea
              value={profileData.bio}
              onChange={(e) => setProfileData({...profileData, bio: e.target.value})}
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
              rows="4"
            />
          </div>

          {user?.role === 'freelancer' && (
            <div className="form-group">
              <label>–ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ (‚ÇΩ)</label>
              <input
                type="number"
                value={profileData.hourlyRate}
                onChange={(e) => setProfileData({...profileData, hourlyRate: e.target.value})}
                placeholder="1000"
              />
            </div>
          )}
        </div>

        <div className="form-section">
          <h3>–°—Å—ã–ª–∫–∏</h3>
          <div className="form-group">
            <label>–í–µ–±-—Å–∞–π—Ç</label>
            <input
              type="url"
              value={profileData.website}
              onChange={(e) => setProfileData({...profileData, website: e.target.value})}
              placeholder="https://example.com"
            />
          </div>
        </div>

        <div className="form-actions">
          <button type="submit" className="btn btn-primary" disabled={saving}>
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}
          </button>
        </div>
      </form>
    </div>
  )

  const renderSecurityTab = () => (
    <div className="settings-tab">
      <div className="tab-header">
        <h2>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞</h2>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–∞—Ä–æ–ª–µ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
      </div>

      <form onSubmit={handleSecuritySave}>
        <div className="form-section">
          <h3>–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h3>
          <div className="form-group">
            <label>–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å *</label>
            <input
              type="password"
              value={securityData.currentPassword}
              onChange={(e) => setSecurityData({...securityData, currentPassword: e.target.value})}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"
              required
            />
          </div>

          <div className="form-row">
            <div className="form-group">
              <label>–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å *</label>
              <input
                type="password"
                value={securityData.newPassword}
                onChange={(e) => setSecurityData({...securityData, newPassword: e.target.value})}
                placeholder="–ù–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤"
                required
              />
            </div>
            <div className="form-group">
              <label>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å *</label>
              <input
                type="password"
                value={securityData.confirmPassword}
                onChange={(e) => setSecurityData({...securityData, confirmPassword: e.target.value})}
                placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                required
              />
            </div>
          </div>
        </div>

        <div className="form-section">
          <h3>–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h3>
          <div className="security-feature">
            <div className="feature-info">
              <h4>–î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞—â–∏—Ç—É</h4>
              <p>–í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
            </div>
            <button type="button" className="btn btn-outline">
              –í–∫–ª—é—á–∏—Ç—å
            </button>
          </div>
        </div>

        <div className="form-actions">
          <button type="submit" className="btn btn-primary" disabled={saving}>
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å'}
          </button>
        </div>
      </form>
    </div>
  )

  const renderNotificationsTab = () => (
    <div className="settings-tab">
      <div className="tab-header">
        <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–µ–º, –∫–∞–∫ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
      </div>

      <form onSubmit={handleNotificationSave}>
        <div className="form-section">
          <h3>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          
          <div className="notification-item">
            <div className="notification-info">
              <h4>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö</h4>
              <p>–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ –æ—Ç–∫–ª–∏–∫–∞—Ö</p>
            </div>
            <label className="toggle-switch">
              <input
                type="checkbox"
                checked={notificationSettings.projectNotifications}
                onChange={(e) => setNotificationSettings({
                  ...notificationSettings,
                  projectNotifications: e.target.checked
                })}
              />
              <span className="slider"></span>
            </label>
          </div>

          <div className="notification-item">
            <div className="notification-info">
              <h4>–°–æ–æ–±—â–µ–Ω–∏—è</h4>
              <p>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ —á–∞—Ç–µ</p>
            </div>
            <label className="toggle-switch">
              <input
                type="checkbox"
                checked={notificationSettings.messageNotifications}
                onChange={(e) => setNotificationSettings({
                  ...notificationSettings,
                  messageNotifications: e.target.checked
                })}
              />
              <span className="slider"></span>
            </label>
          </div>

          <div className="notification-item">
            <div className="notification-info">
              <h4>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏</h4>
              <p>–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</p>
            </div>
            <label className="toggle-switch">
              <input
                type="checkbox"
                checked={notificationSettings.marketingEmails}
                onChange={(e) => setNotificationSettings({
                  ...notificationSettings,
                  marketingEmails: e.target.checked
                })}
              />
              <span className="slider"></span>
            </label>
          </div>
        </div>

        <div className="form-section">
          <h3>SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          <div className="notification-item">
            <div className="notification-info">
              <h4>SMS –æ–ø–æ–≤–µ—â–µ–Ω–∏—è</h4>
              <p>–ü–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ SMS</p>
            </div>
            <label className="toggle-switch">
              <input
                type="checkbox"
                checked={notificationSettings.smsNotifications}
                onChange={(e) => setNotificationSettings({
                  ...notificationSettings,
                  smsNotifications: e.target.checked
                })}
              />
              <span className="slider"></span>
            </label>
          </div>
        </div>

        <div className="form-actions">
          <button type="submit" className="btn btn-primary" disabled={saving}>
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
          </button>
        </div>
      </form>
    </div>
  )

  const renderPaymentsTab = () => (
    <div className="settings-tab">
      <div className="tab-header">
        <h2>–ü–ª–∞—Ç–µ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã</h2>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–ø–æ—Å–æ–±–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π</p>
      </div>

      <div className="form-section">
        <h3>–î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥</h3>
        
        <div className="payment-methods">
          <div className="payment-method-card">
            <div className="method-icon">üí≥</div>
            <div className="method-info">
              <h4>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</h4>
              <p>Visa, Mastercard, –ú–∏—Ä</p>
            </div>
            <button className="btn btn-outline">–î–æ–±–∞–≤–∏—Ç—å</button>
          </div>

          <div className="payment-method-card">
            <div className="method-icon">üè¶</div>
            <div className="method-info">
              <h4>–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</h4>
              <p>–ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—á–µ—Ç</p>
            </div>
            <button className="btn btn-outline">–î–æ–±–∞–≤–∏—Ç—å</button>
          </div>

          <div className="payment-method-card">
            <div className="method-icon">üì±</div>
            <div className="method-info">
              <h4>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏</h4>
              <p>–ÆMoney, Qiwi, WebMoney</p>
            </div>
            <button className="btn btn-outline">–î–æ–±–∞–≤–∏—Ç—å</button>
          </div>
        </div>
      </div>

      <div className="form-section">
        <h3>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</h3>
        <div className="empty-state">
          <div className="empty-icon">üí∏</div>
          <p>–ü–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π</p>
        </div>
      </div>
    </div>
  )

  const renderPrivacyTab = () => (
    <div className="settings-tab">
      <div className="tab-header">
        <h2>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</h2>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</p>
      </div>

      <div className="form-section">
        <h3>–í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è</h3>
        
        <div className="privacy-item">
          <div className="privacy-info">
            <h4>–ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å</h4>
            <p>–†–∞–∑—Ä–µ—à–∏—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å</p>
          </div>
          <label className="toggle-switch">
            <input type="checkbox" defaultChecked />
            <span className="slider"></span>
          </label>
        </div>

        <div className="privacy-item">
          <div className="privacy-info">
            <h4>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω-—Å—Ç–∞—Ç—É—Å</h4>
            <p>–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–æ–≥–¥–∞ –≤—ã –æ–Ω–ª–∞–π–Ω</p>
          </div>
          <label className="toggle-switch">
            <input type="checkbox" defaultChecked />
            <span className="slider"></span>
          </label>
        </div>
      </div>

      <div className="form-section">
        <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
        
        <div className="privacy-action">
          <div className="action-info">
            <h4>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h4>
            <p>–°–∫–∞—á–∞–π—Ç–µ –∫–æ–ø–∏—é –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</p>
          </div>
          <button className="btn btn-outline">–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
        </div>

        <div className="privacy-action">
          <div className="action-info">
            <h4>–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞</h4>
            <p>–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</p>
          </div>
          <button className="btn btn-danger">–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>
        </div>
      </div>
    </div>
  )

  if (!user) {
    return (
      <div className="settings-page">
        <div className="not-authorized">
          <h2>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
          <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º</p>
        </div>
      </div>
    )
  }

  return (
    <div className="settings-page">
      <div className="settings-header">
        <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</h1>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏</p>
      </div>

      <div className="settings-layout">
        <div className="settings-sidebar">
          {tabs.map(tab => (
            <button
              key={tab.id}
              className={`sidebar-tab ${activeTab === tab.id ? 'active' : ''}`}
              onClick={() => setActiveTab(tab.id)}
            >
              <span className="tab-icon">{tab.icon}</span>
              <span className="tab-name">{tab.name}</span>
            </button>
          ))}
        </div>

        <div className="settings-content">
          {activeTab === 'profile' && renderProfileTab()}
          {activeTab === 'security' && renderSecurityTab()}
          {activeTab === 'notifications' && renderNotificationsTab()}
          {activeTab === 'payments' && renderPaymentsTab()}
          {activeTab === 'privacy' && renderPrivacyTab()}
        </div>
      </div>
    </div>
  )
}

export default SettingsPage