// components/Header/Header.jsx
import { Link } from 'react-router-dom'
import { useUser } from '../../contexts/UserContext'
import "./Header.scss";

function Header() {
  const { user, logout } = useUser()

  const handleLogout = () => {
    logout()
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getUserAvatar = () => {
    if (user?.profile?.avatar) {
      return user.profile.avatar;
    }
    return null;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–æ–≤
  const renderAvatar = () => {
    const avatar = getUserAvatar();
    
    if (avatar) {
      return (
        <img 
          src={avatar} 
          alt={user.profile?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} 
          className="avatar-img"
        />
      );
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞
      const initials = user.profile?.name
        ?.split(' ')
        .map(n => n[0])
        .join('')
        .toUpperCase() || 'U';
      
      return (
        <div className="avatar-initials">
          {initials}
        </div>
      );
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∞–π—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  const getSiteName = () => {
    if (user?.role === 'freelancer') {
      return (
        <>
          Freelance<span className="logo-accent">Hub</span>
        </>
      );
    }
    return (
      <>
        Nexus<span className="logo-accent">Hub</span>
      </>
    );
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  const renderNavigation = () => {
    const commonLinks = [
      { to: "/projects", label: "–ü—Ä–æ–µ–∫—Ç—ã" },
      { to: "/chats", label: "–ß–∞—Ç—ã" },
      { to: "/how-it-works", label: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç" }
    ];

    if (user?.role === 'freelancer') {
      return (
        <>
          {commonLinks.map(link => (
            <Link key={link.to} to={link.to} className="nav-link">
              {link.label}
            </Link>
          ))}
          <Link to="/my-responses" className="nav-link">
            –ú–æ–∏ –æ—Ç–∫–ª–∏–∫–∏
          </Link>
        </>
      );
    } else if (user?.role === 'client') {
      return (
        <>
          {commonLinks.map(link => (
            <Link key={link.to} to={link.to} className="nav-link">
              {link.label}
            </Link>
          ))}
          <Link to="/freelancers" className="nav-link">
            –§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã
          </Link>
        </>
      );
    } else {
      // –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      return (
        <>
          <Link to="/projects" className="nav-link">–ü—Ä–æ–µ–∫—Ç—ã</Link>
          <Link to="/freelancers" className="nav-link">–§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã</Link>
          <Link to="/chats" className="nav-link">–ß–∞—Ç—ã</Link>
          <Link to="/how-it-works" className="nav-link">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</Link>
        </>
      );
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const renderUserDropdown = () => {
    const commonItems = [
      { to: "/profile", label: "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", icon: "üë§" },
      { to: "/chats", label: "üí¨ –ú–æ–∏ —á–∞—Ç—ã", icon: "üí¨" },
      { to: "/settings", label: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", icon: "‚öôÔ∏è" }
    ];

    if (user?.role === 'freelancer') {
      return (
        <div className="dropdown-menu">
          {commonItems.map(item => (
            <Link key={item.to} to={item.to} className="dropdown-item">
              {item.label}
            </Link>
          ))}
          <Link to="/my-responses" className="dropdown-item">
            –ú–æ–∏ –æ—Ç–∫–ª–∏–∫–∏
          </Link>
          <div className="dropdown-divider"></div>
          <button onClick={handleLogout} className="dropdown-item logout">
            üö™ –í—ã–π—Ç–∏
          </button>
        </div>
      );
    } else if (user?.role === 'client') {
      return (
        <div className="dropdown-menu">
          {commonItems.map(item => (
            <Link key={item.to} to={item.to} className="dropdown-item">
              {item.label}
            </Link>
          ))}
          <Link to="/my-projects" className="dropdown-item">
            üíº –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã
          </Link>
          <div className="dropdown-divider"></div>
          <button onClick={handleLogout} className="dropdown-item logout">
            üö™ –í—ã–π—Ç–∏
          </button>
        </div>
      );
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  const renderActionButtons = () => {
    if (user?.role === 'client') {
      return (
        <Link to="/create-project" className="create-project-btn">
          <span className="btn-icon">+</span>
          –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
        </Link>
      );
    } else if (user?.role === 'freelancer') {
      return (
        <Link to="/projects" className="find-projects-btn">
          –ù–∞–π—Ç–∏ –ø—Ä–æ–µ–∫—Ç—ã
        </Link>
      );
    }
    return null;
  };

  return (
    <header className="header">
      <div className="logo">
        <Link to="/">
          <img src="/images/logo/logo.svg" alt={user?.role === 'freelancer' ? 'FreelanceHub' : 'NexusHub'} className="logo-img" />
          <h1>{getSiteName()}</h1>
        </Link>
      </div>

      <nav className="nav">
        {renderNavigation()}
      </nav>

      <div className="header-actions">
        {user ? (
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          <div className="user-section">
            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ */}
            {renderActionButtons()}
            
            {/* –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            <div className="user-menu">
              <Link to="/profile" className="profile-link">
                <span className="avatar">
                  {renderAvatar()}
                </span>
                <span className="user-name">
                  {user.profile?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                </span>
              </Link>
              
              {renderUserDropdown()}
            </div>
          </div>
        ) : (
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          <div className="auth-section">
            <Link to="/login" className="login-btn">–í–æ–π—Ç–∏</Link>
            <Link to="/register" className="register-btn">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Link>
          </div>
        )}
      </div>
    </header>
  );
}

export default Header;