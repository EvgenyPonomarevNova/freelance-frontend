import './RegisterForm.scss'
import { useState } from 'react'
import { useUser } from '../../contexts/UserContext'
import { useNavigate } from 'react-router-dom'

function RegisterForm() {
  const { register } = useUser()
  const navigate = useNavigate()
  
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    confirmPassword: '',
    fullName: '',
    role: 'freelancer',
    agreeToTerms: false
  })

  const [errors, setErrors] = useState({})

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }))
    
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: '' }))
    }
  }

  const validateForm = () => {
    const newErrors = {}

    if (!formData.email) {
      newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
    }

    if (!formData.password) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    } else if (formData.password.length < 6) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤'
    }

    if (formData.password !== formData.confirmPassword) {
      newErrors.confirmPassword = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç'
    }

    if (!formData.fullName) {
      newErrors.fullName = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
    }

    if (!formData.agreeToTerms) {
      newErrors.agreeToTerms = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏'
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    if (validateForm()) {
      const newUser = register(formData)
      // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
      navigate('/profile-setup')
    }
  }

  return (
    <div className="register-form">
      <div className="form-header">
        <h2>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ <span className="accent">FreelanceHub</span></h2>
        <p>–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å</p>
      </div>

      <form onSubmit={handleSubmit}>
        {/* –í—ã–±–æ—Ä —Ä–æ–ª–∏ */}
        <div className="role-selection">
          <h3>–ö—Ç–æ –≤—ã?</h3>
          <div className="role-options">
            <label className={`role-option ${formData.role === 'freelancer' ? 'selected' : ''}`}>
              <input
                type="radio"
                name="role"
                value="freelancer"
                checked={formData.role === 'freelancer'}
                onChange={handleChange}
              />
              <div className="role-content">
                <div className="role-icon">üíº</div>
                <div className="role-info">
                  <h4>–§—Ä–∏–ª–∞–Ω—Å–µ—Ä</h4>
                  <p>–ò—â—É –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã</p>
                </div>
              </div>
            </label>

            <label className={`role-option ${formData.role === 'client' ? 'selected' : ''}`}>
              <input
                type="radio"
                name="role"
                value="client"
                checked={formData.role === 'client'}
                onChange={handleChange}
              />
              <div className="role-content">
                <div className="role-icon">üëî</div>
                <div className="role-info">
                  <h4>–ó–∞–∫–∞–∑—á–∏–∫</h4>
                  <p>–ò—â—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π</p>
                </div>
              </div>
            </label>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è */}
        <div className="form-fields">
          <div className="form-group">
            <label htmlFor="fullName">–ü–æ–ª–Ω–æ–µ –∏–º—è</label>
            <input
              type="text"
              id="fullName"
              name="fullName"
              value={formData.fullName}
              onChange={handleChange}
              placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
              className={errors.fullName ? 'error' : ''}
            />
            {errors.fullName && <span className="error-text">{errors.fullName}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              placeholder="your@email.com"
              className={errors.email ? 'error' : ''}
            />
            {errors.email && <span className="error-text">{errors.email}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
            <input
              type="password"
              id="password"
              name="password"
              value={formData.password}
              onChange={handleChange}
              placeholder="–ù–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤"
              className={errors.password ? 'error' : ''}
            />
            {errors.password && <span className="error-text">{errors.password}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
            <input
              type="password"
              id="confirmPassword"
              name="confirmPassword"
              value={formData.confirmPassword}
              onChange={handleChange}
              placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              className={errors.confirmPassword ? 'error' : ''}
            />
            {errors.confirmPassword && <span className="error-text">{errors.confirmPassword}</span>}
          </div>
        </div>

        {/* –°–æ–≥–ª–∞—à–µ–Ω–∏–µ */}
        <div className="form-group checkbox-group">
          <label className="checkbox-label">
            <input
              type="checkbox"
              name="agreeToTerms"
              checked={formData.agreeToTerms}
              onChange={handleChange}
            />
            <span className="checkmark"></span>
            –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å <a href="/rules">–ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</a> –∏ <a href="/safety">–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
          </label>
          {errors.agreeToTerms && <span className="error-text">{errors.agreeToTerms}</span>}
        </div>

        <button type="submit" className="submit-btn">
          –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        </button>

        <div className="form-footer">
          <p>
            –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="/login" className="link">–í–æ–π—Ç–∏</a>
          </p>
        </div>
      </form>
    </div>
  )
}

export default RegisterForm