// components/ProjectEditModal/ProjectEditModal.jsx
import { useState, useEffect } from 'react';
import './ProjectEditModal.scss';

function ProjectEditModal({ project, isOpen, onClose, onSave }) {
  const [formData, setFormData] = useState({});
  const [loading, setLoading] = useState(false);
  const [errors, setErrors] = useState({});

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (project && isOpen) {
      setFormData({
        title: project.title || '',
        description: project.description || '',
        budget: project.budget || '',
        category: project.category || '',
        skills: project.skills?.join(', ') || '',
        deadline: project.deadline || '',
        difficulty: project.difficulty || '',
        work_type: project.work_type || '',
        status: project.status || 'open'
      });
      setErrors({});
    }
  }, [project, isOpen]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: ''
      }));
    }
  };

  const validateForm = () => {
    const newErrors = {};
    
    if (!formData.title?.trim()) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }
    
    if (!formData.description?.trim()) {
      newErrors.description = '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }
    
    if (!formData.budget || formData.budget <= 0) {
      newErrors.budget = '–ë—é–¥–∂–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º';
    }
    
    if (!formData.category?.trim()) {
      newErrors.category = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
    }
    
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) return;
    
    setLoading(true);
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞–≤—ã–∫–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤
      const submitData = {
        ...formData,
        skills: formData.skills.split(',').map(skill => skill.trim()).filter(skill => skill)
      };
      
      await onSave(project.id, submitData);
      onClose();
    } catch (error) {
      console.error('Error saving project:', error);
      setErrors({ submit: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞' });
    } finally {
      setLoading(false);
    }
  };

  if (!isOpen || !project) return null;

  const categories = [
    'web_development', 'mobile_development', 'design', 'marketing',
    'writing', 'translation', 'admin_support', 'customer_service',
    'data_science', 'engineering', 'other'
  ];

  const categoryLabels = {
    web_development: 'üåê –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    mobile_development: 'üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    design: 'üé® –î–∏–∑–∞–π–Ω',
    marketing: 'üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
    writing: '‚úçÔ∏è –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥',
    translation: 'üî§ –ü–µ—Ä–µ–≤–æ–¥',
    admin_support: 'üìä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
    customer_service: 'üíÅ –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
    data_science: 'üìä Data Science',
    engineering: '‚öôÔ∏è –ò–Ω–∂–µ–Ω–µ—Ä–∏—è',
    other: 'üîß –î—Ä—É–≥–æ–µ'
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="project-edit-modal" onClick={(e) => e.stopPropagation()}>
        <div className="modal-header">
          <h2>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</h2>
          <button className="close-btn" onClick={onClose}>√ó</button>
        </div>

        <form onSubmit={handleSubmit} className="edit-form">
          <div className="form-content">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="form-section">
              <h3>üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
              
              <div className="form-group">
                <label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *</label>
                <input
                  type="text"
                  id="title"
                  name="title"
                  value={formData.title || ''}
                  onChange={handleChange}
                  className={errors.title ? 'error' : ''}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
                />
                {errors.title && <span className="error-text">{errors.title}</span>}
              </div>

              <div className="form-group">
                <label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *</label>
                <textarea
                  id="description"
                  name="description"
                  value={formData.description || ''}
                  onChange={handleChange}
                  rows="5"
                  className={errors.description ? 'error' : ''}
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –æ–∂–∏–¥–∞–Ω–∏—è"
                />
                {errors.description && <span className="error-text">{errors.description}</span>}
              </div>

              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="budget">–ë—é–¥–∂–µ—Ç (‚ÇΩ) *</label>
                  <input
                    type="number"
                    id="budget"
                    name="budget"
                    value={formData.budget || ''}
                    onChange={handleChange}
                    className={errors.budget ? 'error' : ''}
                    placeholder="5000"
                    min="0"
                  />
                  {errors.budget && <span className="error-text">{errors.budget}</span>}
                </div>

                <div className="form-group">
                  <label htmlFor="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                  <select
                    id="category"
                    name="category"
                    value={formData.category || ''}
                    onChange={handleChange}
                    className={errors.category ? 'error' : ''}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                    {categories.map(cat => (
                      <option key={cat} value={cat}>
                        {categoryLabels[cat] || cat}
                      </option>
                    ))}
                  </select>
                  {errors.category && <span className="error-text">{errors.category}</span>}
                </div>
              </div>
            </div>

            {/* –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ */}
            <div className="form-section">
              <h3>‚öôÔ∏è –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞</h3>
              
              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="deadline">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</label>
                  <input
                    type="text"
                    id="deadline"
                    name="deadline"
                    value={formData.deadline || ''}
                    onChange={handleChange}
                    placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 2 –Ω–µ–¥–µ–ª–∏"
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="difficulty">–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</label>
                  <select
                    id="difficulty"
                    name="difficulty"
                    value={formData.difficulty || ''}
                    onChange={handleChange}
                  >
                    <option value="">–ù–µ —É–∫–∞–∑–∞–Ω–æ</option>
                    <option value="beginner">üë∂ –ù–∞—á–∞–ª—å–Ω—ã–π</option>
                    <option value="intermediate">üí™ –°—Ä–µ–¥–Ω–∏–π</option>
                    <option value="expert">üî• –°–ª–æ–∂–Ω—ã–π</option>
                  </select>
                </div>
              </div>

              <div className="form-group">
                <label htmlFor="work_type">–¢–∏–ø —Ä–∞–±–æ—Ç—ã</label>
                <select
                  id="work_type"
                  name="work_type"
                  value={formData.work_type || ''}
                  onChange={handleChange}
                >
                  <option value="">–ù–µ —É–∫–∞–∑–∞–Ω–æ</option>
                  <option value="one_time">‚è±Ô∏è –†–∞–∑–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞</option>
                  <option value="ongoing">üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞</option>
                  <option value="hourly">‚è∞ –ü–æ—á–∞—Å–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞</option>
                </select>
              </div>

              <div className="form-group">
                <label htmlFor="skills">–ù–∞–≤—ã–∫–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</label>
                <input
                  type="text"
                  id="skills"
                  name="skills"
                  value={formData.skills || ''}
                  onChange={handleChange}
                  placeholder="JavaScript, React, Node.js, Design"
                />
                <small>–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –Ω–∞–≤—ã–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é</small>
              </div>
            </div>

            {/* –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ */}
            <div className="form-section">
              <h3>üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞</h3>
              <div className="form-group">
                <label htmlFor="status">–°—Ç–∞—Ç—É—Å</label>
                <select
                  id="status"
                  name="status"
                  value={formData.status || 'open'}
                  onChange={handleChange}
                >
                  <option value="open">üîì –û—Ç–∫—Ä—ã—Ç</option>
                  <option value="in_progress">‚ö° –í —Ä–∞–±–æ—Ç–µ</option>
                  <option value="completed">‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω</option>
                  <option value="cancelled">‚ùå –û—Ç–º–µ–Ω–µ–Ω</option>
                </select>
              </div>
            </div>
          </div>

          {/* –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
          {errors.submit && (
            <div className="form-error">
              {errors.submit}
            </div>
          )}

          {/* –§—É—Ç–µ—Ä —Ñ–æ—Ä–º—ã */}
          <div className="form-footer">
            <button 
              type="button" 
              className="btn btn-secondary"
              onClick={onClose}
              disabled={loading}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button 
              type="submit" 
              className="btn btn-primary"
              disabled={loading}
            >
              {loading ? 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default ProjectEditModal;